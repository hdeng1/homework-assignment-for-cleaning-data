Experiment
===========
The experiments have been carried out with a group of 30 volunteers within an age bracket of 19-48 years. Each person performed six activities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING) wearing a smartphone (Samsung Galaxy S II) on the waist. Using its embedded accelerometer and gyroscope, we captured 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz. The experiments have been video-recorded to label the data manually. The obtained dataset has been randomly partitioned into two sets, where 70% of the volunteers was selected for generating the training data and 30% the test data. 

The sensor signals (accelerometer and gyroscope) were pre-processed by applying noise filters and then sampled in fixed-width sliding windows of 2.56 sec and 50% overlap (128 readings/window). The sensor acceleration signal, which has gravitational and body motion components, was separated using a Butterworth low-pass filter into body acceleration and gravity. The gravitational force is assumed to have only low frequency components, therefore a filter with 0.3 Hz cutoff frequency was used. From each window, a vector of features was obtained by calculating variables from the time and frequency domain. See 'features_info.txt' for more details. 

For each record it is provided:

 Triaxial acceleration from the accelerometer (total acceleration) and the estimated body acceleration.
- Triaxial Angular velocity from the gyroscope. 
- A 561-feature vector with time and frequency domain variables. 
- Its activity label. There are six activities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING) 
- An identifier of the subject who carried out the experiment.  Its range is from 1 to 30.


Feature Selection 
=================

The features selected for this database come from the accelerometer and gyroscope 3-axial raw signals tAcc-XYZ and tGyro-XYZ. These time domain signals (prefix 't' to denote time) were captured at a constant rate of 50 Hz. Then they were filtered using a median filter and a 3rd order low pass Butterworth filter with a corner frequency of 20 Hz to remove noise. Similarly, the acceleration signal was then separated into body and gravity acceleration signals (tBodyAcc-XYZ and tGravityAcc-XYZ) using another low pass Butterworth filter with a corner frequency of 0.3 Hz. 

Subsequently, the body linear acceleration and angular velocity were derived in time to obtain Jerk signals (tBodyAccJerk-XYZ and tBodyGyroJerk-XYZ). Also the magnitude of these three-dimensional signals were calculated using the Euclidean norm (tBodyAccMag, tGravityAccMag, tBodyAccJerkMag, tBodyGyroMag, tBodyGyroJerkMag). 

Finally a Fast Fourier Transform (FFT) was applied to some of these signals producing fBodyAcc-XYZ, fBodyAccJerk-XYZ, fBodyGyro-XYZ, fBodyAccJerkMag, fBodyGyroMag, fBodyGyroJerkMag. (Note the 'f' to indicate frequency domain signals). 

These signals were used to estimate variables of the feature vector for each pattern:  
'-XYZ' is used to denote 3-axial signals in the X, Y and Z directions.

tBodyAcc-XYZ
tGravityAcc-XYZ
tBodyAccJerk-XYZ
tBodyGyro-XYZ
tBodyGyroJerk-XYZ
tBodyAccMag
tGravityAccMag
tBodyAccJerkMag
tBodyGyroMag
tBodyGyroJerkMag
fBodyAcc-XYZ
fBodyAccJerk-XYZ
fBodyGyro-XYZ
fBodyAccMag
fBodyAccJerkMag
fBodyGyroMag
fBodyGyroJerkMag

The set of variables that were estimated from these signals are: 

mean(): Mean value
std(): Standard deviation
mad(): Median absolute deviation 
max(): Largest value in array
min(): Smallest value in array
sma(): Signal magnitude area
energy(): Energy measure. Sum of the squares divided by the number of values. 
iqr(): Interquartile range 
entropy(): Signal entropy
arCoeff(): Autorregresion coefficients with Burg order equal to 4
correlation(): correlation coefficient between two signals
maxInds(): index of the frequency component with largest magnitude
meanFreq(): Weighted average of the frequency components to obtain a mean frequency
skewness(): skewness of the frequency domain signal 
kurtosis(): kurtosis of the frequency domain signal 
bandsEnergy(): Energy of a frequency interval within the 64 bins of the FFT of each window.
angle(): Angle between to vectors.

Additional vectors obtained by averaging the signals in a signal window sample. These are used on the angle() variable:

gravityMean
tBodyAccMean
tBodyAccJerkMean
tBodyGyroMean
tBodyGyroJerkMean

Summary data
============
The summary data are stored in a dataframe called newdata.  It contains the average value of mean or standard deviation extracted from the merged train/test dataset, grouped by subject and activity.     
There are total 180 combination of subject and 79 averages.

The analysis includes the following steps:
1. Load the data sets.
2. Edit feature names from "features.txt" by removing() and replcing "-" with "_" in column names loaded from features_info.txt. For example, change "tBodyAcc-min()-X" into "tBodyAcc_min_X". 
The feature names are prety long, therefore I am not going to make the feature name more discriptive by replacing the short-cut words with full names.
3.Assemble a complete train data frame 'sub_act_train' by
 A. coloumn_bind the 'subject_train.txt','y_train.txt' and 'X_train.txt' together.
 B. name the columns as subject, activity, followed by the features from step 2.
4. Assemble a complete test data frame 'sub_act_test', in the same way as the train data frame.
5. Merge the train/test data frame from step 3-4 into one data frame,'test_train'
6. Extract only mean and standard deviation values from teh data frame in step 5 by making a new subset 'test_train_mean_std3'. 
7. Use descriptive activity names.  Label activity factors as WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING. 
8. Get the mean value of each measurment for each subject and each activity. I am not sure what exactly teacher wants here. 
I assume the clean data frame is the culmunation of the previous steps (i.e mearge tain-test, extract mean/ standard deviation, then get the average of mean and standard deviations).
 A. Group data frame 'test_train_mean_std3' by subject and activity.  There are 30 sujects and 6 activities, therefore there are a total of 180 combinations of subject and activity in the final data frame.  
 B. Summarize the data by averaging each mean and std value.

The 79 features in the data frame newdata are the average of 
 [3] "tBodyAcc_mean_X"              
 [4] "tBodyAcc_mean_Y"               "tBodyAcc_mean_Z"               "tGravityAcc_mean_X"           
 [7] "tGravityAcc_mean_Y"            "tGravityAcc_mean_Z"            "tBodyAccJerk_mean_X"          
[10] "tBodyAccJerk_mean_Y"           "tBodyAccJerk_mean_Z"           "tBodyGyro_mean_X"             
[13] "tBodyGyro_mean_Y"              "tBodyGyro_mean_Z"              "tBodyGyroJerk_mean_X"         
[16] "tBodyGyroJerk_mean_Y"          "tBodyGyroJerk_mean_Z"          "tBodyAccMag_mean"             
[19] "tGravityAccMag_mean"           "tBodyAccJerkMag_mean"          "tBodyGyroMag_mean"            
[22] "tBodyGyroJerkMag_mean"         "fBodyAcc_mean_X"               "fBodyAcc_mean_Y"              
[25] "fBodyAcc_mean_Z"               "fBodyAcc_meanFreq_X"           "fBodyAcc_meanFreq_Y"          
[28] "fBodyAcc_meanFreq_Z"           "fBodyAccJerk_mean_X"           "fBodyAccJerk_mean_Y"          
[31] "fBodyAccJerk_mean_Z"           "fBodyAccJerk_meanFreq_X"       "fBodyAccJerk_meanFreq_Y"      
[34] "fBodyAccJerk_meanFreq_Z"       "fBodyGyro_mean_X"              "fBodyGyro_mean_Y"             
[37] "fBodyGyro_mean_Z"              "fBodyGyro_meanFreq_X"          "fBodyGyro_meanFreq_Y"         
[40] "fBodyGyro_meanFreq_Z"          "fBodyAccMag_mean"              "fBodyAccMag_meanFreq"         
[43] "fBodyBodyAccJerkMag_mean"      "fBodyBodyAccJerkMag_meanFreq"  "fBodyBodyGyroMag_mean"        
[46] "fBodyBodyGyroMag_meanFreq"     "fBodyBodyGyroJerkMag_mean"     "fBodyBodyGyroJerkMag_meanFreq"
[49] "tBodyAcc_std_X"                "tBodyAcc_std_Y"                "tBodyAcc_std_Z"               
[52] "tGravityAcc_std_X"             "tGravityAcc_std_Y"             "tGravityAcc_std_Z"            
[55] "tBodyAccJerk_std_X"            "tBodyAccJerk_std_Y"            "tBodyAccJerk_std_Z"           
[58] "tBodyGyro_std_X"               "tBodyGyro_std_Y"               "tBodyGyro_std_Z"              
[61] "tBodyGyroJerk_std_X"           "tBodyGyroJerk_std_Y"           "tBodyGyroJerk_std_Z"          
[64] "tBodyAccMag_std"               "tGravityAccMag_std"            "tBodyAccJerkMag_std"          
[67] "tBodyGyroMag_std"              "tBodyGyroJerkMag_std"          "fBodyAcc_std_X"               
[70] "fBodyAcc_std_Y"                "fBodyAcc_std_Z"                "fBodyAccJerk_std_X"           
[73] "fBodyAccJerk_std_Y"            "fBodyAccJerk_std_Z"            "fBodyGyro_std_X"              
[76] "fBodyGyro_std_Y"               "fBodyGyro_std_Z"               "fBodyAccMag_std"              
[79] "fBodyBodyAccJerkMag_std"       "fBodyBodyGyroMag_std"          "fBodyBodyGyroJerkMag_std"

The unit of features
===================
The acceleration signal from the smartphone accelerometer x,y,z axis are in standard gravity units 'g'. 
The body acceleration signal are obtained by subtracting the gravity from the total acceleration with units 'g'.
The angular velocity vector is measured by the gyroscope for each window sample. The units are radians/second. 
